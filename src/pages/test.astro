---
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";

import cloud from "@assets/case-study/3.2.cloud.png";
import heart from "@assets/case-study/3.1.heart.png";
import pencil from "@assets/case-study/3.3.pencil.png";
import compass from "@assets/case-study/2.1.compass.png";
import map from "@assets/case-study/2.2.map.png";
import hand from "@assets/case-study/2.3.hand.png";
import Section from "@components/CaseStudy/Section.astro";
import AnimatedImage from "@components/CaseStudy/AnimatedImage.astro";
---

<Layout title="test">
    <!-- <div class="h-screen bg-ice-blue">
        <div class="js-parallax relative">
            <Image src={mouse} alt="" width={500} height={500} class="absolute" />
            <Image src={screen} alt="" width={500} height={500} class="absolute" />
            <Image src={heart2} alt="" width={500} height={500} class="absolute" />
        </div>
    </div>
    <div class="js-parallax-2 h-screen bg-tea-green">
        <div class="relative">
            <Image src={cloud} alt="" width={500} height={500} class="el1 absolute" />
            <Image src={heart} alt="" width={500} height={500} class="el2 absolute" />
            <Image src={pencil} alt="" width={500} height={500} class="el3 absolute" />
        </div>
    </div> -->
    <Section class="bg-ice-blue">
        <Fragment slot="images">
            <AnimatedImage
                data-animation-path={[
                    [-1, -1],
                    [-20, 3],
                    [30, 0]
                ]}
            >
                <Image src={compass} alt="" width={500} height={500} class="el1" />
            </AnimatedImage>
            <AnimatedImage
                data-animation-path={[
                    [-4, 4],
                    [-8, -4],
                    [-12, -2]
                ]}
            >
                <Image src={map} alt="" width={500} height={500} class="el2" />
            </AnimatedImage>
            <AnimatedImage data-animation-path={[[15, 30]]}>
                <Image src={hand} alt="" width={500} height={500} class="el3" />
            </AnimatedImage>
        </Fragment>
    </Section>

    <Section class="bg-tea-green">
        <Fragment slot="images">
            <AnimatedImage
                data-animation-path={[
                    [-1, -1],
                    [-20, 3],
                    [30, 0]
                ]}
            >
                <Image src={cloud} alt="" width={500} height={500} class="el1" />
            </AnimatedImage>
            <AnimatedImage
                data-animation-path={[
                    [-4, 4],
                    [-8, -4],
                    [-12, -2]
                ]}
            >
                <Image src={heart} alt="" width={500} height={500} class="el2" />
            </AnimatedImage>
            <AnimatedImage data-animation-path={[[15, 30]]}>
                <Image src={pencil} alt="" width={500} height={500} class="el3" />
            </AnimatedImage>
        </Fragment>
    </Section>
</Layout>

<script>
    import { scroll, timeline, ScrollOffset, type TimelineDefinition } from "motion";
    // // https://youtu.be/Dxm6EwvQIl8 - jak zrobić w 2 strony
    // const parallaxEl = document.querySelectorAll(".js-parallax") as NodeListOf<HTMLElement>;

    // // powinno to wyglądać tak
    // // progress of container sprawia że kontroluje się animacja z 0% do 100%
    // // dzieje się to w 2 strony
    // // powinno się to dziać na container dla zdjęć i zaczynać od 50-75% widoczności zdjęcia - trzeba tylko pamiętać, że domyślnie div któy jest relative z absolute elementami ma 0px height!!!
    // const parallaxEl = document.querySelector(".js-parallax-2") as HTMLElement;
    // // scroll("")
    // const sequence = [
    //     [".el3", { transform: ["translate(0, 0)", "translate(150px, 30px)"] }],
    //     [
    //         ".el1",
    //         { transform: ["translate(0, 0)", "translate(-1%, -1%)", "translate(0%, -3%)", "translate(0%, 0%)"] },
    //         { at: "<" }
    //     ],
    //     [
    //         ".el2",
    //         { transform: ["translate(0, 0)", "translate(-4%, -4%)", "translate(-8%, -4%)", "translate(-12%, -2%)"] },
    //         { at: "<" }
    //     ]
    // ] satisfies TimelineDefinition;

    // const options = {
    //     defaultOptions: { ease: "ease" }
    // };

    // scroll(timeline(sequence, options), { target: parallaxEl, offset: ["25% end", "end end"] });
</script>
