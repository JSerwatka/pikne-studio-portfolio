---
import { Image } from "astro:assets";
import { zip } from "@utils/zip";
import Layout from "../layouts/Layout.astro";

import compass from "@assets/case-study/2.1.compass.png";
import map from "@assets/case-study/2.2.map.png";
import hand from "@assets/case-study/2.3.hand.png";

import cloud from "@assets/case-study/3.2.cloud.png";
import heart from "@assets/case-study/3.1.heart.png";
import pencil from "@assets/case-study/3.3.pencil.png";

import pointer from "@assets/case-study/4.1.pointer.png";
import browser from "@assets/case-study/4.2.browser.png";
import heart2 from "@assets/case-study/4.3.heart.png";

import megaphone from "@assets/case-study/5.1.megaphone.png";
import stars from "@assets/case-study/5.2.stars.png";

import Section from "@components/CaseStudy/Section.astro";
import AnimatedImage, {
    type RotationPathType,
    type TranslationPathType
} from "@components/CaseStudy/AnimatedImage.astro";

interface AnimatedImagesConfigType {
    [key: string]: {
        translationPath: TranslationPathType;
        rotationPath: RotationPathType;
        alt: string;
        src: ImageMetadata;
    }[];
}

const IMG_SIZE = 500;

const animatedImagesConfig: AnimatedImagesConfigType = {
    "step-2": [
        {
            translationPath: [
                [-1, -1],
                [-20, 3],
                [30, 0]
            ],
            rotationPath: [1, 2],
            alt: "",
            src: compass
        },
        {
            translationPath: [
                [-4, 4],
                [-8, -4],
                [-12, -2]
            ],
            rotationPath: [],
            alt: "",
            src: map
        },
        {
            translationPath: [[15, 30]],
            rotationPath: [],
            alt: "",
            src: hand
        }
    ],
    "step-3": [
        {
            translationPath: [
                [-1, -1],
                [-20, 3],
                [30, 0]
            ],
            rotationPath: [1, 2],
            alt: "",
            src: cloud
        },
        {
            translationPath: [
                [-4, 4],
                [-8, -4],
                [-12, -2]
            ],
            rotationPath: [],
            alt: "",
            src: heart
        },
        {
            translationPath: [[15, 30]],
            rotationPath: [],
            alt: "",
            src: pencil
        }
    ],
    "step-4": [
        {
            translationPath: [
                [-1, -1],
                [-20, 3],
                [30, 0]
            ],
            rotationPath: [],
            alt: "",
            src: pointer
        },
        {
            translationPath: [
                [-4, 4],
                [-8, -4],
                [-12, -2]
            ],
            rotationPath: [],
            alt: "",
            src: browser
        },
        {
            translationPath: [[15, 30]],
            rotationPath: [],
            alt: "",
            src: heart2
        }
    ],
    "step-5": [
        {
            translationPath: [],
            rotationPath: [10, 20, 30],
            alt: "",
            src: megaphone
        },
        {
            translationPath: [],
            rotationPath: [10, 20, 30],
            alt: "",
            src: stars
        }
    ]
};
---

<Layout title="test">
    <Section class="bg-lilac">
        <Fragment slot="images">
            {
                animatedImagesConfig["step-2"].map((animatedImage) => (
                    <AnimatedImage
                        src={animatedImage.src}
                        alt={animatedImage.alt}
                        width={IMG_SIZE}
                        height={IMG_SIZE}
                        data-translation-path={animatedImage.translationPath}
                        data-rotation-path={animatedImage.rotationPath}
                    />
                ))
            }
        </Fragment>
    </Section>
    <Section class="bg-ice-blue">
        <Fragment slot="images">
            {
                animatedImagesConfig["step-3"].map((animatedImage) => (
                    <AnimatedImage
                        src={animatedImage.src}
                        alt={animatedImage.alt}
                        width={IMG_SIZE}
                        height={IMG_SIZE}
                        data-translation-path={animatedImage.translationPath}
                        data-rotation-path={animatedImage.rotationPath}
                    />
                ))
            }
        </Fragment>
    </Section>
    <Section class="bg-tea-green">
        <Fragment slot="images">
            {
                animatedImagesConfig["step-4"].map((animatedImage) => (
                    <AnimatedImage
                        src={animatedImage.src}
                        alt={animatedImage.alt}
                        width={IMG_SIZE}
                        height={IMG_SIZE}
                        data-translation-path={animatedImage.translationPath}
                        data-rotation-path={animatedImage.rotationPath}
                    />
                ))
            }
        </Fragment>
    </Section>
    <Section class="bg-volt">
        <Fragment slot="images">
            {
                animatedImagesConfig["step-5"].map((animatedImage) => (
                    <AnimatedImage
                        src={animatedImage.src}
                        alt={animatedImage.alt}
                        width={IMG_SIZE}
                        height={IMG_SIZE}
                        data-translation-path={animatedImage.translationPath}
                        data-rotation-path={animatedImage.rotationPath}
                    />
                ))
            }
        </Fragment>
    </Section>
</Layout>

<script>
    import { scroll, timeline, type TimelineDefinition } from "motion";
    import type { TranslationPathType, RotationPathType } from "@components/CaseStudy/AnimatedImage.astro";
    import { zip } from "@utils/zip";

    const animationContainers = document.querySelectorAll(
        "[data-scroll-animation-container]"
    ) as NodeListOf<HTMLElement>;

    // animate all sections' imgs on scroll by animation path
    animationContainers.forEach((animationContainer) => {
        const imageAnimationContainers = Array.from(
            animationContainer.querySelectorAll(
                "[data-translation-path],[data-rotation-path]"
            ) as NodeListOf<HTMLElement>
        );

        const sequence = imageAnimationContainers.map((imageAnimationContainer) => {
            const translationPath = JSON.parse(
                imageAnimationContainer.dataset.translationPath ?? "[]"
            ) as TranslationPathType;

            const rotationPath = JSON.parse(imageAnimationContainer.dataset.rotationPath ?? "[]") as RotationPathType;

            const aimationsMapped = zip(
                translationPath,
                rotationPath,
                (translationElement, rotationElement): string => {
                    const translationString = translationElement
                        ? `translate(${translationElement[0]}%, ${translationElement[1]}%)`
                        : "";
                    const rotationString = rotationElement !== undefined ? `rotate(${rotationElement}deg)` : "";

                    return [translationString, rotationString].filter(Boolean).join(",");
                }
            );

            return [imageAnimationContainer, { transform: ["translate(0, 0)", ...aimationsMapped] }, { at: "<" }];
        }) satisfies TimelineDefinition;

        const options = {
            defaultOptions: { ease: "ease" }
        };

        scroll(timeline(sequence, options), { target: animationContainer, offset: ["25% end", "end end"] });
    });
</script>
