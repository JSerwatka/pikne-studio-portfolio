<footer id="contact" class="z-10">
    <div class:list={["-mb-[0.46em] text-center font-alexang text-[min(25vw,425px)]"]}>Contact me</div>
    <div
        class:list={[
            "text-paragraph__normal min-h-screen bg-ruby-red text-light-pink",
            "px-6 py-16 text-base",
            "sm:text-xl",
            "lg:px-16 lg:pt-24"
        ]}
    >
        <div class="custom-container">
            <div
                class:list={[
                    "grid h-full",
                    "grid-cols-1 gap-16 children:max-w-[680px]",
                    "sm:gap-20",
                    "lg:grid-cols-2 lg:children:max-w-none"
                ]}
            >
                <form
                    class:list={[
                        "mx-auto flex w-full flex-col gap-y-8",
                        "children:rounded-3xl children:border children:border-light-pink children:bg-ruby-red children:p-10 children:text-light-pink children:placeholder-light-pink",
                        "order-1",
                        "lg:order-2"
                    ]}
                >
                    <input
                        type="text"
                        class="outline-2 outline-light-pink focus:outline"
                        placeholder="Name (+ optionally surname)"
                        required
                    />
                    <input
                        type="email"
                        class="outline-2 outline-light-pink focus:outline"
                        placeholder="Email"
                        required
                    />
                    <textarea
                        class="min-h-[300px] outline-2 outline-light-pink focus:outline"
                        placeholder="Message"
                        required></textarea>
                    <button type="submit" class:list={["font-alexang", "text-3xl", "sm:text-5xl"]}
                        >Send the word üïäÔ∏è</button
                    >
                </form>
                <div
                    class:list={[
                        "mx-auto flex w-full",
                        "order-2 flex-col text-base",
                        "sm:flex-row sm:justify-between sm:pr-11",
                        "lg:order-1 lg:flex-col lg:pr-0"
                    ]}
                >
                    <div class:list={["children-not-last:mb-6", "mb-12", "sm:mb-0"]}>
                        <div>
                            based in Krak√≥w | <span data-krakow-time class="font-bold">{new Date()}</span> | <span
                                data-krakow-weather-text></span><span
                                data-krakow-weather-icon
                                class="children: children:inline children:w-[35px] children:-translate-y-1"></span>
                        </div>
                        <div>available for freelance work worldwide</div>
                        <a
                            href="mailto:hello@pekala.design"
                            rel="noopener noreferrer"
                            target="_blank"
                            aria-label="Aleksandra Pƒôkala contact mail"
                            class="block underline decoration-light-pink-transparent decoration-1 underline-offset-4"
                        >
                            hello@pekala.design
                        </a>
                        <a
                            href="https://calendly.com/aleksandrapekala/design-inquiry"
                            rel="noopener noreferrer"
                            target="_blank"
                            class="block underline decoration-light-pink-transparent decoration-1 underline-offset-4"
                        >
                            book a free consultancy call
                        </a>
                    </div>
                    <ul class="uppercase children-not-last:mb-6">
                        <li>
                            <a
                                href="https://www.linkedin.com/in/alekspekala/"
                                rel="noopener noreferrer"
                                target="_blank"
                                aria-label="Aleksandra Pƒôkala Linkedin profile"
                            >
                                Linkedin
                            </a>
                        </li>
                        <li>
                            <a
                                href="https://medium.com/@aleksandrapekala"
                                rel="noopener noreferrer"
                                target="_blank"
                                aria-label="Aleksandra Pƒôkala Medium profile"
                            >
                                Medium
                            </a>
                        </li>
                        <li>
                            <a
                                href="https://www.instagram.com/pekalaart/"
                                rel="noopener noreferrer"
                                target="_blank"
                                aria-label="Aleksandra Pƒôkala Illustrations Instagram profile"
                            >
                                Instagram
                            </a>
                        </li>
                        <li>
                            <a
                                href="https://read.cv/aleksandrapekala"
                                rel="noopener noreferrer"
                                target="_blank"
                                aria-label="Aleksandra Pƒôkala Read.CV profile"
                            >
                                Read.CV
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <div
                class:list={[
                    "mt-20 max-w-[680px] ",
                    "text-sm leading-7",
                    "sm:text-base sm:leading-8",
                    "lg:mx-0 lg:max-w-max"
                ]}
            >
                What you see came true thanks to one and only
                <a
                    href="https://github.com/JSerwatka"
                    rel="noopener noreferrer"
                    target="_blank"
                    aria-label="Kuba Serwatka github profile"
                    class="underline decoration-light-pink-transparent decoration-1 underline-offset-4"
                >
                    Kuba Serwatka
                </a> who developed this website. ‚ô• Design by Aleksandra Pekala, 2023. You can find <a
                    href="/privacy-policy"
                    class="underline decoration-light-pink-transparent decoration-1 underline-offset-4"
                >
                    privacy policy here.
                </a>
            </div>
        </div>
    </div>
</footer>

<script>
    const krakowTime = document.querySelector("[data-krakow-time]") as HTMLElement;
    const krakowWeatherText = document.querySelector("[data-krakow-weather-text]") as HTMLElement;
    const krakowWeatherIcon = document.querySelector("[data-krakow-weather-icon]") as HTMLElement;
    function updateTime() {
        const date = new Date();
        const timeString = new Intl.DateTimeFormat("en-US", {
            timeZone: "Europe/Warsaw",
            hour: "2-digit",
            minute: "2-digit",
            hour12: true
        }).format(date);

        krakowTime.textContent = timeString;
    }

    updateTime();
    setInterval(updateTime, 25000);

    async function fetchWeather() {
        try {
            const apiKey = import.meta.env.PUBLIC_WEATHER_API_KEY;
            const city = "Cracow";
            const url = `http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=no`;
            const requestOptions = {
                headers: {
                    "Cache-Control": "max-age=3600"
                }
            };

            const response = await fetch(url, requestOptions);
            if (!response.ok) {
                throw new Error("Network response was not ok");
            }
            const data = await response.json();
            const { temp_c: temperature, condition } = data?.current;
            const weatherIconUrl = condition?.icon;

            if (temperature && weatherIconUrl) {
                const weatherIcon = document.createElement("img");
                weatherIcon.src = weatherIconUrl;
                weatherIcon.alt = `${condition?.text ?? "weather"} icon`;
                krakowWeatherText.innerText = `${temperature}¬∞C`;
                krakowWeatherIcon.appendChild(weatherIcon);
            }
        } catch (error) {
            console.error(error);
        }
    }
    fetchWeather();

    // function replaceValidationUI(form) {
    //     // Suppress the default bubbles
    //     form.addEventListener(
    //         "invalid",
    //         function (event) {
    //             console.log("invalid", event);
    //             event.preventDefault();
    //         },
    //         true
    //     );

    //     // Support Safari, iOS Safari, and the Android browser‚Äîeach of which do not prevent
    //     // form submissions by default
    //     form.addEventListener("submit", function (event) {
    //         console.log("submit");
    //         if (!this.checkValidity()) {
    //             event.preventDefault();
    //         }
    //     });

    //     // Add a container to hold error messages
    //     // form.insertAdjacentHTML("afterbegin", "<ul class='error-messages'></ul>");

    //     const submitButton = form.querySelector("button[type=submit]") as HTMLButtonElement;
    //     submitButton.addEventListener("click", function (event) {
    //         var invalidFields = form.querySelectorAll(":invalid"),
    //             listHtml = "",
    //             errorMessages = form.querySelector(".error-messages"),
    //             label;
    //         console.log("invalid fields", invalidFields[0].validationMessage);
    //         for (var i = 0; i < invalidFields.length; i++) {
    //             label = form.querySelector("label[for=" + invalidFields[i].id + "]");
    //             listHtml += "<li>" + label.innerHTML + " " + invalidFields[i].validationMessage + "</li>";
    //         }

    //         // Update the list with the new error messages
    //         errorMessages.innerHTML = listHtml;

    //         // If there are errors, give focus to the first invalid field and show
    //         // the error messages container
    //         if (invalidFields.length > 0) {
    //             invalidFields[0].focus();
    //             errorMessages.style.display = "block";
    //         }
    //     });
    // }

    // // Replace the validation UI for all forms
    // const form = document.querySelector("form");
    // replaceValidationUI(form);
</script>
