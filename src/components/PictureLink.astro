---
import { Image } from "astro:assets";
import nextArrowIcon from "@assets/arrow.svg";
---

<div class="relative">
    <!-- <div class="font-metropolis text-xl uppercase -mb-5">Next up</div>
    <div class="flex gap-3">
        <Image src={nextArrowIcon} alt="arrow icon" width={50} />

        <div class="text-header__1 text-white">MIR</div>
        <span class="hover-container">
            <span class="link-text" aria-hidden="true">MIR</span>
            <span class="image-container">
                <span class="image-inner">
                    <img class="link-image" src="https://assets.codepen.io/1159990/tokyo-tower.jpg" alt="Tokyo Tower" />
                </span>
            </span>
        </span>
    </div> -->
    <div class="relative">
        <!-- <div class="text-header__1">
            text test
        </div> -->

            <div class="text-header__1 text-lilac css-link-text absolute top-0 left-0 bg-dark-chocolate">
                text test
            </div>
    </div>

    <div>
        <img class="absolute  w-[150px] h-[150px] top-0 left-0 object-cover object-center rounded-full js-circle-img pointer-events-none" src="https://assets.codepen.io/1159990/tokyo-tower.jpg" alt="Tokyo Tower" />
    </div>
</div>

<style>
    .css-link-text {
        z-index: 10;
        pointer-events: none;
        clip-path: circle(75px at var(--x) var(--y));
        /* overflow: hidden; */
        /* opacity: 1; */
        /* transition: opacity 250ms ease; */
    }
</style>

<script>

    const linkText = document.querySelector(".css-link-text") as HTMLElement;
    const linkImage = document.querySelector(".js-circle-img") as HTMLElement;



    function getPositionOnScreen(element) {
        const rect = linkText.getBoundingClientRect();

        console.log({top: rect.top, scrolly: window.scrollY});
        const scrollX = window.scrollX || document.documentElement.scrollLeft;
        const scrollY = window.scrollY || document.documentElement.scrollTop;
        const offsetX = rect.left + scrollX;
        const offsetY =  scrollY - rect.top;
        return { x: offsetX, y: offsetY };
    }


    function showImgContent(e) {
        const elePosiotion = getPositionOnScreen(linkText)
        const rect = linkText.getBoundingClientRect();

        console.log({mousey: e.clientY });

        const mouseX = e.clientX;
        const mouseY = e.clientY;
        linkImage.style.left = mouseX - 75 - rect.left + 'px';
        linkImage.style.top = mouseY - 75 - rect.top + 'px';        
        linkText.style.setProperty("--x", mouseX - rect.left  + "px");
        linkText.style.setProperty("--y", mouseY - rect.top + "px");
    }

    // linkImage.style.left = 0 + 'px';
    //     linkImage.style.top = 0 + 'px'; 

    document.addEventListener("mousemove", showImgContent);
</script>
